# 내장톰캣의 포트 변경
# 1. ???? ??
server.port = 80

# 2. JPA ?? ??
    # 1. DB URL
spring.datasource.driverClassName =com.mysql.cj.jdbc.Driver
        # spring.datasource.driverClassName = DBMS ???? ??[? ??? ??]
spring.datasource.url =jdbc:mysql://localhost:3306/springweb
        # spring.datasource.url = ??? ?????? ??

    # 2. DB USER
spring.datasource.username =root
        # spring.datasource.username = ???

    # 3. DB PASSWORD [ ????? ???? ??! ]
spring.datasource.password =1234
        # spring.datasource.password =DB?? ????

#[ ?? ?? ]
    # DDL ????
        # create : ??? ??? ???? ?? DB? ???/??? (?? ??? ? ??) ??? ??? ??
                    # ?? ??? ???
        # update : ??? ??? ???? ?? DB? ??? ?? / ??? ??
                    # ??? ???? ??? ??(nullable, ??, ??? ?? ?)? ???? ??, ??? ??? ???? ????? ????

spring.jpa.hibernate.ddl-auto = update

#  how to select that JPA run sql at console
    #   1. select sql at console
spring.jpa.properties.hibernate.show_sql = true
    #   2. another select
spring.jpa.properties.hibernate.format_sql = true

# spring view controller    -----> react build file[js]
spring.mvc.pathmatch.matching-strategy = ant_path_matcher

# ============================== kakao OAUTH2 CONNECT

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost/login/oauth2/code/kakao

spring.security.oauth2.client.registration.kakao.client-id=4a784a5331359f0111a46e92472eef29
spring.security.oauth2.client.registration.kakao.client-secret=4X8VbNMsIca5F4ELxWTTUZcy2ezOU8sx
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email

# ===================================================


# ============================== naver OAUTH2 CONNECT

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.user-name-attribute=response
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:80/login/oauth2/code/naver

spring.security.oauth2.client.registration.naver.client-id=XrMDKGYCbGXwAJO6dZ6T
spring.security.oauth2.client.registration.naver.client-secret=3cmBM8bIrN
spring.security.oauth2.client.registration.naver.client-authentication-method=POST
spring.security.oauth2.client.registration.naver.scope=nickname,email

# ===================================================


# ============================== google OAUTH2 CONNECT

spring.security.oauth2.client.registration.google.client-id=796434184680-n7t4ag5gseqkfljvc1qtlqo6a1ol83j9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

# ===================================================













