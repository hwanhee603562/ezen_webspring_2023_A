plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '1.8'
}

repositories {  // 외부 라이브러리 추가하는 곳 => 자동으로 해당 라이브러리 다운로드 받고 프로젝트에 빌드
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    runtimeOnly 'com.mysql:mysql-connector-j'       // mysql 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'          // lmbok 라이브러리
    annotationProcessor 'org.projectlombok:lombok'  // lombok 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-web'       // SpringWeb 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-security'  // Spring Security
}

tasks.named('test') {
    useJUnitPlatform()
}







// -------------------------------- 리액트(빌드) 통합 --------------------------------
// * 터미널에서 리액트를 실행하지 않고 gradle이 리액트를 빌드해서 빌드된 파일을 스프링쪽으로 이동
// 1. 리액트 코드파일이 있는 리액트프로젝트 폴더 경로

def frontendDir = "$projectDir/src/main/reactapp"
// $projectDir  : 현재 gradle 프로젝트 위치
//  = "$projectDir/src/main/{리액트프로젝트폴더명}"

// 2. 리액트 코드파일을 빌드해서 빌드된 파일을 어디로 이동시킬지 정의
sourceSets {
    main {
        resources { srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

// 3. 이동 [ 원본 이동x, 복사 이동o ]
processResources { dependsOn "copyReactBuildFiles" }

// 4. 리액트 설치 [ 리액트 라이브러리가 없으면 npm update ]
task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install' }
    else {
        commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
    }
}

// 5. 리액트 빌드
task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"       // 리액트코드가 있는 폴더경로
    inputs.dir "$frontendDir"       // 빌드 했을 때 저장할 폴더경로
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {    // 운영체제가 윈도우가 아니면
        commandLine "npm", "run-script", "build"
    }
}

// 6. 리액트 빌드파일 복사
task copyReactBuildFiles(type: Copy) {
    dependsOn "buildReact"
    from "$frontendDir/build"                       // 복사할 파일이 어디에서
    into "$projectDir/src/main/resources/static"    // 복사할 파일을 어디로
}
















